# https://hub.docker.com/r/itsthenetwork/nfs-server-alpine/
# https://container42.com/2014/03/29/docker-quicktip-4-remote-volumes/
# https://matthewpalmer.net/kubernetes-app-developer/articles/kubernetes-volumes-example-nfs-persistent-volume.html
# https://hub.docker.com/r/erichough/nfs-server/

kind: Service
apiVersion: v1
metadata:
  name: nfs-service
spec:
  selector:
    role: nfs
  ports:
    # Open the ports required by the NFS server
    # Port 2049 for TCP
    - name: tcp-2049
      port: 2049
      protocol: TCP
---
# kind: Pod
# apiVersion: v1
# metadata:
#   name: nfs-server-pod
#   labels:
#     role: nfs
# spec:
#   containers:
#     - name: nfs-server-container
#       image: erichough/nfs-server
#       securityContext:
#         privileged: true
#       env:
#         - name: NFS_EXPORT_0
#           value: '/                  *(ro,no_subtree_check)'
# kind: Pod
# apiVersion: v1
# metadata:
#   name: nfs-server-pod
#   labels:
#     role: nfs
# spec:
#   containers:
#     - name: nfs-server-container
#       image: cpuguy83/nfs-server
#       securityContext:
#         privileged: true
#       args:
#         - /tmp
#         - /dev
#         - /home

# The following works
# kind: Pod
# apiVersion: v1
# metadata:
#   name: nfs-server-pod
#   labels:
#     role: nfs
# spec:
#   containers:
#     - name: nfs-server-container
#       ports:
#       - containerPort: 2049
#       image: itsthenetwork/nfs-server-alpine
#       securityContext:
#         privileged: true
#       env:
#         - name: SHARED_DIRECTORY
#           value: /dev
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: nfs-test-claim
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: nfs-test-claim2
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nfs-export
data:
 exports: |
    /mnt-root *(fsid=0,rw,async,no_subtree_check,no_auth_nlm,insecure,all_squash,anonuid=0,anongid=0)
    /mnt-root/test *(rw,async,no_subtree_check,no_auth_nlm,insecure,all_squash,anonuid=0,anongid=0)
    /mnt-root/test2 *(rw,async,no_subtree_check,no_auth_nlm,insecure,all_squash,anonuid=0,anongid=0)
---
kind: Pod
apiVersion: v1
metadata:
  name: nfs-server-pod
  labels:
    role: nfs
spec:
  containers:
    - name: nfs-server-container
      ports:
      - containerPort: 2049
      image: c6oio/nfs-server-alpine
      imagePullPolicy: Always
      securityContext:
        privileged: true
      volumeMounts:
      - name: mnt-root
        mountPath: /mnt-root
      - name: my-vol
        mountPath: "/mnt-root/test"
      - name: my-vol2
        mountPath: "/mnt-root/test2"
      - name: nfs-export-volume
        mountPath: /etc/exports
        subPath: exports
  volumes:
    - name: mnt-root
      emptyDir: {}
    - name: my-vol
      persistentVolumeClaim:
        claimName: nfs-test-claim
    - name: my-vol2
      persistentVolumeClaim:
        claimName: nfs-test-claim2
    - name: nfs-export-volume
      configMap:
        name: nfs-export
